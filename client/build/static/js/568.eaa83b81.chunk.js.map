{"version":3,"file":"static/js/568.eaa83b81.chunk.js","mappings":"0JAaA,EANwB,SAAH,GAAuB,IAAlBA,EAAW,EAAXA,YACtB,OACI,eAAIC,UAAU,UAAU,eAAcD,GAE9C,C,qLCoEA,EAhEkB,WAChB,OAAqCE,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAjEC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAC1B,GAIIC,EAAAA,EAAAA,MAHFC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,IAAS,WAETC,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,IAAS,IACpB,GAAG,CAACJ,IAWJ,OAAIN,GACK,SAAC,KAAQ,CAACW,GAAI,OAIrB,iBAAKjB,UAAW,QAAQ,WACtB,eAAIA,UAAW,aAAa,SAAC,8BAC7B,SAACkB,EAAA,EAAE,CAACnB,YAAa,UAChBM,IAAS,gBAAKL,UAAW,gBAAgB,SAAEK,KAC5C,gBAAKL,UAAW,YAAY,UAC1B,kBAAMmB,SAAUV,GAnBL,SAACW,GAChB,IAAMC,EAAiB,CACrBC,KAAM,QACNC,MAAOH,EAAKI,MACZC,SAAUL,EAAKM,UAEjBd,GAASe,EAAAA,EAAAA,GAAcN,GACzB,IAY6C,WACrC,SAACO,EAAA,EAAS,CACRC,UAAW,QACXrB,SAAUA,EACVE,OAAQA,EACRoB,YAAa,iBACbC,YAAY,KAEd,SAACH,EAAA,EAAS,CACRC,UAAW,WACXrB,SAAUA,EACVE,OAAQA,EACRoB,YAAa,oBACbC,YAAY,EACZT,KAAM,cAER,SAACU,EAAA,EAAM,CACLV,KAAM,SACNW,SACE7B,GACE,SAAC8B,EAAA,EAAgB,CAACC,MAAO,CAAEC,MAAO,SAAWC,KAAM,KACjD,KAENC,KAAM,oBAMlB,C","sources":["components/common/hr/Hr.tsx","pages/login/Login.tsx"],"sourcesContent":["import React, {FC} from 'react';\r\nimport './hr.scss'\r\n\r\ninterface HrProps{\r\n    dataContent: string;\r\n}\r\n\r\nconst Hr: FC<HrProps> = ({dataContent}) => {\r\n    return (\r\n        <hr className=\"hr-text\" data-content={dataContent}/>\r\n    );\r\n};\r\n\r\nexport default Hr;","import React, { FC, useEffect } from 'react';\r\nimport './login.scss';\r\nimport Button from '../../components/common/button/Button';\r\nimport FormGroup from '../../components/common/formGroup/FormGroup';\r\nimport Hr from '../../components/common/hr/Hr';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector, useTitle } from '../../hooks';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  authArgs,\r\n  authorizeUser,\r\n} from '../../store/reducers/auth/actionCreators';\r\nimport { setError } from '../../store/reducers/auth/authSlice';\r\n\r\nconst Login: FC = () => {\r\n  const { isLoading, error, isAuth } = useAppSelector((state) => state.auth);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const dispatch = useAppDispatch();\r\n  useTitle('Log in');\r\n\r\n  useEffect(() => {\r\n    dispatch(setError(''));\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = (data: any) => {\r\n    const args: authArgs = {\r\n      type: 'login',\r\n      email: data.Email,\r\n      password: data.Password,\r\n    };\r\n    dispatch(authorizeUser(args));\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <div className={'login'}>\r\n      <h2 className={'loginTitle'}>Đăng Nhập</h2>\r\n      <Hr dataContent={'Login'} />\r\n      {error && <div className={'registerError'}>{error}</div>}\r\n      <div className={'loginForm'}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup\r\n            fieldName={'Email'}\r\n            register={register}\r\n            errors={errors}\r\n            placeholder={'Enter email...'}\r\n            isRequired={true}\r\n          />\r\n          <FormGroup\r\n            fieldName={'Password'}\r\n            register={register}\r\n            errors={errors}\r\n            placeholder={'Enter password...'}\r\n            isRequired={true}\r\n            type={'password'}\r\n          />\r\n          <Button\r\n            type={'submit'}\r\n            progress={\r\n              isLoading ? (\r\n                <CircularProgress style={{ color: 'white' }} size={20} />\r\n              ) : null\r\n            }\r\n            text={'Continue'}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["dataContent","className","useAppSelector","state","auth","isLoading","error","isAuth","useForm","register","handleSubmit","errors","formState","dispatch","useAppDispatch","useTitle","useEffect","setError","to","Hr","onSubmit","data","args","type","email","Email","password","Password","authorizeUser","FormGroup","fieldName","placeholder","isRequired","Button","progress","CircularProgress","style","color","size","text"],"sourceRoot":""}